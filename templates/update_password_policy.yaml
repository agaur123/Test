AWSTemplateFormatVersion: 2010-09-09
Description: Update password policy for AWS account.
Resources:
    LambdaIAMRole:
          Type: "AWS::IAM::Role"
          Properties:
            Path: "/lambda/servicerole/"
            ManagedPolicyArns:
              - arn:aws:iam::aws:policy/IAMFullAccess
              - arn:aws:iam::aws:policy/service-role/AWSConfigRulesExecutionRole
              - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
            AssumeRolePolicyDocument:
                Version: "2012-10-17"
                Statement:
                   - Effect: "Allow"
                     Principal:
                        Service: [lambda.amazonaws.com]
                     Action:
                        - sts:AssumeRole

    FunctionToUpdatePasswordPolicy:
          Type: "AWS::Lambda::Function"
          Properties:
             Code:
                ZipFile: |
                  import boto3
                  import logging
                  import json
                  import datetime

                  log = logging.getLogger()
                  log.setLevel(logging.DEBUG)
                  def update_policy():
                      iam = boto3.resource('iam')
                      account_password_policy = iam.AccountPasswordPolicy()
                      res = account_password_policy.update(
                          MinimumPasswordLength=14,
                          RequireSymbols=True,
                          RequireNumbers=True,
                          RequireUppercaseCharacters=True,
                          RequireLowercaseCharacters=True,
                          AllowUsersToChangePassword=True,
                          MaxPasswordAge=90,
                          PasswordReusePrevention=24,
                          HardExpiry=True
                      )
                      print (res)
                      return {"compliance_type" : "COMPLIANT","annotation" : "Updated Password Policy"}

                  def lambda_handler(event, context):
                      log.debug('Event = %s', event)
                      invoking_event = json.loads(event['invokingEvent'])
                      config = boto3.client('config')
                      evaluation = update_policy()
                      response = config.put_evaluations(Evaluations=[{'ComplianceResourceType': "AWS::IAM::User",'ComplianceResourceId': 'PasswordPolicy','ComplianceType': evaluation["compliance_type"],"Annotation": evaluation["annotation"],'OrderingTimestamp': datetime.datetime.now()},],ResultToken=event['resultToken'])

             Description: "Update password policy"
             Handler: index.lambda_handler
             MemorySize: 1024
             Role: !GetAtt LambdaIAMRole.Arn
             Runtime: python3.6
             Timeout: 5

    UpdatePasswordPolicyFunctionPermission:
          Type: AWS::Lambda::Permission
          Properties:
            FunctionName: !GetAtt FunctionToUpdatePasswordPolicy.Arn
            Action: lambda:InvokeFunction
            Principal: config.amazonaws.com

    UpdatePasswordPolicyConfigRule:
            Type: AWS::Config::ConfigRule
            DependsOn:
              - UpdatePasswordPolicyFunctionPermission
            Properties:
              Description: To update password policy to be compliant with CIS Rules 1.5 through 1.11
              Source:
                Owner: CUSTOM_LAMBDA
                SourceDetails:
                  -
                    EventSource: aws.config
                    MessageType: ScheduledNotification
                    MaximumExecutionFrequency: One_Hour
                  -
                    EventSource: aws.config
                    MessageType: ConfigurationItemChangeNotification
                SourceIdentifier: !GetAtt FunctionToUpdatePasswordPolicy.Arn
